#!/bin/bash

verbose=0;

log() {
    if [[ $verbose -eq 1 ]]; then
        echo "$@"
    fi
}

init_bash() {
    log "Initializing bash configs"

    files=(bashrc bash_profile bash_aliases bash_functions bash_prompt)

    for file in ${files[*]}; do
        log "Trying to find '.$file'"
        if [[ -e ~/.$file || -L ~/.$file ]]; then
            log "Backing up ~/.$file"
            mv ~/.$file $backup_dir/.$file
        fi
    done

    for file in ${files[*]}; do
        log "Create symlink for '.$file'"
        ln -s $(pwd)/$file ~/.$file
    done
}

init_git() {
    log "Initializing git configs"

    if [[ -e ~/.gitconfig || -L ~/.gitconfig ]]; then
        log "Backing up ~/.gitconfig"
        mv ~/.gitconfig $backup_dir/.gitconfig
    fi

    ln -s $(pwd)/gitconfig ~/.gitconfig

    if [[ ! -e ~/.gitconfig.user ]]; then
        while [[ ! -n $git_name ]]; do
            read -p "Enter git name: " git_name
        done

        while [[ ! -n $git_email ]]; do
            read -p "Enter git email: " git_email
        done

        echo "[user]" > ~/.gitconfig.user
        echo "    name = $git_name" >> ~/.gitconfig.user
        echo "    email = $git_email" >> ~/.gitconfig.user
    fi
}

init_vim() {
    log "Initializing vim configs"

    if [[ -e ~/.vimrc || -L ~/.vimrc ]]; then
        log "Backing up '~/.vimrc'"
        mv ~/.vimrc $backup_dir/.vimrc
    fi

    log "Creating symbolic link for '.vimrc'"
    ln -s $(pwd)/vimrc ~/.vimrc

    if [[ -d ~/.vim ]]; then
        log "Backing up '~/.vim'"
        mv ~/.vim $backup_dir/.vim
    fi

    mkdir -p ~/.vim/bundle

    log "Cloning Vundle"
    git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle

    log "Installing vim bundles"
    vim +BundleInstall +qall

    log "Installing powerline's patched font"
    if [[ ! -d ~/.fonts ]]; then
        mkdir ~/.fonts
    fi

    powerline_font="DejaVu Sans Mono for Powerline.ttf"

    if [[ ! -e ~/.fonts/$powerline_font ]]; then
        cp "fonts/$powerline_font" ~/.fonts/
        fc-cache -vf ~/.fonts
    else
        log "Font '$powerline_font' already installed!"
    fi

    if ! hash wmctrl 2>/dev/null; then
        echo " NOTE: Install 'wmctrl' to start gVim maximized"
    fi
}

while getopts ":v" opt; do
    case $opt in
        v)
            verbose=1
        ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
        ;;
    esac
done

backup_dir="backup/$(date +%Y%m%d.%H%M.%s)"
log "Backup dir: $backup_dir"
mkdir $backup_dir

init_bash
init_git
init_vim


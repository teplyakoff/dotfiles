#!/bin/bash

verbose=0;

log() {
    if [[ $verbose -eq 1 ]]; then
        echo "$@"
    fi
}

init_bash() {
    log "Initializing bash configs"

    files=(bashrc bash_aliases bash_functions bash_prompt)

    for file in ${files[*]}; do
        log "Trying to find '.$file'"
        if [[ -e ~/.$file || -L ~/.$file ]]; then
            log "Backing up ~/.$file"
            mv ~/.$file $backup_dir/.$file
        fi
    done

    for file in ${files[*]}; do
        log "Create symlink for '.$file'"
        ln -s $(pwd)/$file ~/.$file
    done
}

init_git() {
    log "Initializing git configs"

    if [[ -e ~/.gitconfig || -L ~/.gitconfig ]]; then
        log "Backing up ~/.gitconfig"
        mv ~/.gitconfig $backup_dir/.gitconfig
    fi

    ln -s $(pwd)/gitconfig ~/.gitconfig

    if [[ ! -e ~/.gitconfig.user ]]; then
        while [[ ! -n $git_name ]]; do
            read -p "Enter git name: " git_name
        done

        while [[ ! -n $git_email ]]; do
            read -p "Enter git email: " git_email
        done

        echo "[user]" > ~/.gitconfig.user
        echo "    name = $git_name" >> ~/.gitconfig.user
        echo "    email = $git_email" >> ~/.gitconfig.user
    fi
}

while getopts ":v" opt; do
    case $opt in
        v)
            verbose=1
	;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
        ;;
    esac
done

backup_dir="backup/$(date +%Y%m%d.%H%M.%s)"
log "Backup dir: $backup_dir"
mkdir $backup_dir

init_bash
init_git

